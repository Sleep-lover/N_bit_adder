$date
	Wed Jul  6 15:01:28 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module n_bitadder_tb $end
$var wire 32 ! answer [31:0] $end
$var reg 32 " input1 [31:0] $end
$var reg 32 # input2 [31:0] $end
$scope module M $end
$var wire 32 $ input1 [31:0] $end
$var wire 32 % input2 [31:0] $end
$var wire 1 & carry_out $end
$var wire 32 ' carry [31:0] $end
$var wire 32 ( answer [31:0] $end
$scope begin generate_N_bit_Adder[0] $end
$scope begin genblk2 $end
$scope module f $end
$var wire 1 ) c $end
$var wire 1 * s $end
$var wire 1 + x $end
$var wire 1 , y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[1] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 - c_in $end
$var wire 1 . c_out $end
$var wire 1 / s $end
$var wire 1 0 x $end
$var wire 1 1 y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[2] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 2 c_in $end
$var wire 1 3 c_out $end
$var wire 1 4 s $end
$var wire 1 5 x $end
$var wire 1 6 y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[3] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 7 c_in $end
$var wire 1 8 c_out $end
$var wire 1 9 s $end
$var wire 1 : x $end
$var wire 1 ; y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[4] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 < c_in $end
$var wire 1 = c_out $end
$var wire 1 > s $end
$var wire 1 ? x $end
$var wire 1 @ y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[5] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 A c_in $end
$var wire 1 B c_out $end
$var wire 1 C s $end
$var wire 1 D x $end
$var wire 1 E y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[6] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 F c_in $end
$var wire 1 G c_out $end
$var wire 1 H s $end
$var wire 1 I x $end
$var wire 1 J y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[7] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 K c_in $end
$var wire 1 L c_out $end
$var wire 1 M s $end
$var wire 1 N x $end
$var wire 1 O y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[8] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 P c_in $end
$var wire 1 Q c_out $end
$var wire 1 R s $end
$var wire 1 S x $end
$var wire 1 T y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[9] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 U c_in $end
$var wire 1 V c_out $end
$var wire 1 W s $end
$var wire 1 X x $end
$var wire 1 Y y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[10] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 Z c_in $end
$var wire 1 [ c_out $end
$var wire 1 \ s $end
$var wire 1 ] x $end
$var wire 1 ^ y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[11] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 _ c_in $end
$var wire 1 ` c_out $end
$var wire 1 a s $end
$var wire 1 b x $end
$var wire 1 c y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[12] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 d c_in $end
$var wire 1 e c_out $end
$var wire 1 f s $end
$var wire 1 g x $end
$var wire 1 h y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[13] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 i c_in $end
$var wire 1 j c_out $end
$var wire 1 k s $end
$var wire 1 l x $end
$var wire 1 m y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[14] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 n c_in $end
$var wire 1 o c_out $end
$var wire 1 p s $end
$var wire 1 q x $end
$var wire 1 r y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[15] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 s c_in $end
$var wire 1 t c_out $end
$var wire 1 u s $end
$var wire 1 v x $end
$var wire 1 w y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[16] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 x c_in $end
$var wire 1 y c_out $end
$var wire 1 z s $end
$var wire 1 { x $end
$var wire 1 | y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[17] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 } c_in $end
$var wire 1 ~ c_out $end
$var wire 1 !" s $end
$var wire 1 "" x $end
$var wire 1 #" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[18] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 $" c_in $end
$var wire 1 %" c_out $end
$var wire 1 &" s $end
$var wire 1 '" x $end
$var wire 1 (" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[19] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 )" c_in $end
$var wire 1 *" c_out $end
$var wire 1 +" s $end
$var wire 1 ," x $end
$var wire 1 -" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[20] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 ." c_in $end
$var wire 1 /" c_out $end
$var wire 1 0" s $end
$var wire 1 1" x $end
$var wire 1 2" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[21] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 3" c_in $end
$var wire 1 4" c_out $end
$var wire 1 5" s $end
$var wire 1 6" x $end
$var wire 1 7" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[22] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 8" c_in $end
$var wire 1 9" c_out $end
$var wire 1 :" s $end
$var wire 1 ;" x $end
$var wire 1 <" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[23] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 =" c_in $end
$var wire 1 >" c_out $end
$var wire 1 ?" s $end
$var wire 1 @" x $end
$var wire 1 A" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[24] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 B" c_in $end
$var wire 1 C" c_out $end
$var wire 1 D" s $end
$var wire 1 E" x $end
$var wire 1 F" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[25] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 G" c_in $end
$var wire 1 H" c_out $end
$var wire 1 I" s $end
$var wire 1 J" x $end
$var wire 1 K" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[26] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 L" c_in $end
$var wire 1 M" c_out $end
$var wire 1 N" s $end
$var wire 1 O" x $end
$var wire 1 P" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[27] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 Q" c_in $end
$var wire 1 R" c_out $end
$var wire 1 S" s $end
$var wire 1 T" x $end
$var wire 1 U" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[28] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 V" c_in $end
$var wire 1 W" c_out $end
$var wire 1 X" s $end
$var wire 1 Y" x $end
$var wire 1 Z" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[29] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 [" c_in $end
$var wire 1 \" c_out $end
$var wire 1 ]" s $end
$var wire 1 ^" x $end
$var wire 1 _" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[30] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 `" c_in $end
$var wire 1 a" c_out $end
$var wire 1 b" s $end
$var wire 1 c" x $end
$var wire 1 d" y $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_N_bit_Adder[31] $end
$scope begin genblk3 $end
$scope module f $end
$var wire 1 e" c_in $end
$var wire 1 f" c_out $end
$var wire 1 g" s $end
$var wire 1 h" x $end
$var wire 1 i" y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
1h
0g
1f
0e
0d
0c
0b
0a
0`
0_
0^
1]
1\
0[
0Z
0Y
0X
1W
0V
1U
1T
0S
0R
1Q
1P
1O
1N
1M
1L
1K
1J
0I
0H
1G
1F
0E
1D
0C
1B
1A
1@
1?
0>
1=
0<
0;
1:
19
08
07
16
05
14
03
02
01
00
1/
0.
1-
1,
1+
0*
1)
b1011010001110 (
b111110001 '
0&
b1000111010101 %
b10010111001 $
b1000111010101 #
b10010111001 "
b1011010001110 !
$end
#100
